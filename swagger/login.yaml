/login:
  post:
    tags:
      - Login
    summary: 로그인 시도
    description: JWT를 사용한 로그인 시도 API
    parameters:
      - name: authorization
        in: header
        description: JWT
        schema:
          type: string
          format: JWT
      - name: refresh_token
        in: body
        description: refresh token
        schema:
          type: object
          example: { 'refresh_token': 'refresh_token' }
    responses:
      '200':
        description: 로그인 성공
        content:
          application/json:
            schema:
              type: object
              example: { 'code': 200, 'message': 'token is created', 'access_token': 'new_token' }
      '400':
        description: 잘못된 요청
        content:
          application/json:
            schema:
              type: object
              example: { 'code': 401, 'message': 'refresh token is invalid' }

/login/google:
  get:
    tags:
      - Login
    summary: 구글 OAuth 로그인
    description: 구글 OAuth 로그인 페이지 이동
    responses:
      '200':
        description: 구글 로그인 후 /login/redirect로 리다이렉트
      '400':
        description: 잘못된 요청

/login/redirect:
  get:
    tags:
      - Login
    summary: 구글 OAuth 로그인 리다이렉트
    description: 구글 로그인 성공 후 리다이렉트 되어서 JWT 발급하는 API. access_token, refresh_token을 발급한다.
    responses:
      '200':
        description: JWT 발급 성공
        content:
          application/json:
            schema:
              type: object
              example:
                {
                  'code': 200,
                  'message': 'token is created',
                  'access_token': 'access_token',
                  'refresh_token': 'refresh_token'
                }
      '400':
        description: 잘못된 요청
        content:
          application/json:
            schema:
              type: object
              example: { 'code': 400, 'message': 'token is not created' }
