name: Deploy to GCP Instance using SSH

on:
  push:
    branches: ['main']

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/minskim3/Crush_Backend

            git checkout main
            git fetch --all
            git reset --hard origin/main
            git pull origin main

            echo "NODE_ENV=${{ secrets.NODE_ENV}}" > .env
            echo "MONGODB_URI=${{ secrets.MONGODB_URI}}" >> .env
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID}}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET}}" >> .env
            echo "REDIRECT_URI=${{ secrets.REDIRECT_URI}}" >> .env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY}}" >> .env
            echo "SERVER_HOST=${{ secrets.SERVER_HOST}}" >> .env
            echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID}}" >> .env
            echo "GCS_BUCKET=${{ secrets.GCS_BUCKET}}" >> .env
            echo "GCS_KEYFILE_PATH=${{ secrets.GCS_KEYFILE_PATH}}" >> .env

            if [ "$(docker ps -aq -f name=nodejs)" ]
            then
              echo "[ nodejs is running ]"
              echo "[ restart nodejs ]"
              docker stop nodejs
              docker rm nodejs
            else
              echo "[ nodejs is not running ]"
              echo "[ run nodejs ]"
            fi
            docker build -t crush .
            docker run -d -p ${{ secrets.NODE_PORT }}:${{ secrets.NODE_PORT}} --name nodejs --env-file ./.env -v /home/minskim3/Crush_Backend:/backend crush
